services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "${BACKEND_PORT}:8060"
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_DATA_REDIS_HOST: ${SPRING_DATA_REDIS_HOST}
      SPRING_DATA_REDIS_PORT: ${SPRING_DATA_REDIS_PORT}
      SPRING_SCRAPER_URL: ${SCRAPER_URL}
      SPRING_SCRAPER_ELECTRIC_ENDPOINT: ${ELECTRIC_ENDPOINT}
    depends_on:
      - redis
      - scraper
      - db
    volumes:
      - ./src/main/resources/application.properties:/app/src/main/resources/application.properties
    restart: unless-stopped

  frontend:
    build:
      context: ./react-beats
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "${FRONTEND_PORT}:80"
    restart: unless-stopped

  scraper:
    build:
      context: ./scraper-microservice
      dockerfile: Dockerfile
    container_name: scraper
    ports:
      - "${SCRAPER_PORT}:8070"
    restart: unless-stopped

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  db:
    image: postgres:15
    container_name: db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "55432:${POSTGRES_PORT}"
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  redis_data:
  db_data:
